- url = url_for(:action => 'cb_rate_form_field_changed', :id => "#{@sb[:rate].id || "new"}")
- currency = ChargebackRateDetailCurrency.currencies_for_select
#flash_msg_div
#form_div
  %h3
    = _('Basic Info')
  .form-horizontal.static
    .form-group
      %label.col-md-2.control-label
        = _('Description')
      .col-md-8
        = text_field_tag("description", @edit[:new][:description],
                        :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json,
                        :class => "form-control")
        = javascript_tag(javascript_focus('description'))

  %hr

  /Add a new selector for the currencies
  %h3
    = _('Currencies')
  .form-horizontal.static
    .form-group
      %label.col-md-2.control-label
        = _('Select currency: ')
      .col-md-8
        = select_tag("currency",
          options_for_select(currency, @edit[:new][:currency]),
          "data-miq_observe" => {:url => url}.to_json)

  %h3= _('Rate Details')
  %table.table.table-bordered
    %thead
      %tr
        %th{:rowspan => "2"}= _('Group')
        %th{:rowspan => "2"}= _('Description')
        %th{:rowspan => "2"}= _('Interval start')
        %th{:rowspan => "2"}= _('Interval end')
        %th{:colspan => "2"}= _('Rate')
        %th{:rowspan => "2"}= _('Add/Remove Tier')
        %th{:rowspan => "2"}= _('Per Time')
        %th{:rowspan => "2"}= _('Per Unit')
      %tr
        %th= _("Fixed")
        %th= _("Variable")
    %tbody
      - if params[:pressed] == "chargeback_rates_edit"
        - edit = true
      - @sb[:rate_details].each_with_index do |r, i|
        - @cur_group = r[:group] if @cur_group.nil?
        - if @cur_group != r[:group]
          - @cur_group = r[:group]
          %tr
            %td.active{:colspan => "9"} &nbsp;
        - num_tiers = r.chargeback_tiers.to_a.blank? ? "1" : r.chargeback_tiers.to_a.length.to_s
        - num_tiers = @sb[:tiers][i].blank? ? "1" : @sb[:tiers][i].length.to_s

        %tr{:id => "rate_detail_row_#{i}_0"}
          %td{:rowspan => num_tiers}
            = h(rate_detail_group(r[:group]))
          %td{:rowspan => num_tiers}
            = r[:description]
          %td
            = text_field_tag("start_#{i}_0", @edit[:new][:tiers][i][0][:start],
              :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          %td
            = text_field_tag("end_#{i}_0", @edit[:new][:tiers][i][0][:end],
              :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          %td{:align => 'right'}
            = text_field_tag("fix_rate_#{i}_0", @edit[:new][:tiers][i][0][:fix_rate],
              :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          %td{:align => 'right'}
            = text_field_tag("var_rate_#{i}_0", @edit[:new][:tiers][i][0][:var_rate],
              :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          %td
            = button_tag(_(""),
                         :class   => "btn btn-default  pficon-add-circle-o",
                         :alt     => t = _("Add a new tier"),
                         :title   => t,
                         :onclick => "miqAjaxButton('#{url_for(:action => "cb_tier_add",
                                                               :id     => i,
                                                               :button => "add")}');")
          %td{:rowspan => num_tiers}
            = select_tag("per_time_#{i}",
              options_for_select(@edit[:new][:per_time_types].invert, @edit[:new][:details][i][:per_time]),
              "data-miq_observe" => {:url => url}.to_json)
          - measure = @edit[:new][:details][i][:detail_measure]
          - if measure.nil?
            /if the rate detail don't have a metric associated, display the per_unit_display
            %td{:rowspan => num_tiers}
              = r.per_unit_display
          - else
            /if the rate detail have a metric associated, display an options field with per_unit selected
            %td{:rowspan => num_tiers}
              = select_tag("per_unit_#{i}", options_for_select(measure.measures, r.per_unit), "data-miq_observe" => {:url => url}.to_json)
        - for j in 1..num_tiers.to_i-1
          - tier = r.chargeback_tiers.to_a[j]
          - tier = @sb[:tiers][i][j]
          %tr{:id => "rate_detail_row_#{i}_#{j}"}
            %td
              = text_field_tag("start_#{i}_#{j}", tier.start,
                :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
            %td
              = text_field_tag("end_#{i}_#{j}", tier.end,
                :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
            %td{:align => "right"}
              = text_field_tag("fix_rate_#{i}_#{j}", tier.fix_rate,
                :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
            %td{:align => "right"}
              = text_field_tag("var_rate_#{i}_#{j}", tier.var_rate,
                :maxlength => MAX_NAME_LEN, "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
            %td
              = button_tag(_(""),
                   :class   => "btn btn-default pficon-delete",
                   :alt     => t = _("Remove the tier"),
                   :title   => t,
                   :onclick => "miqAjaxButton('#{url_for(:action => "cb_tier_remove",
                                                         :id     => "#{i}-#{j}",
                                                         :button => "remove")}');")
